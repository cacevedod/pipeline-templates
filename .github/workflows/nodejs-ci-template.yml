name: Node.js Reusable CI Advanced

on:
  workflow_call:
    inputs:
      working-directory:
        description: "Directory where the node project is located"
        required: false
        type: string
        default: "."
      node-version:
        description: "Node.js version to use"
        required: false
        type: string
        default: "20"
      run-sonar:
        description: "Run SonarQube analysis"
        required: false
        type: boolean
        default: false
      run-checkov:
        description: "Run Checkov IaC scan"
        required: false
        type: boolean
        default: false
      run-docker-build:
        description: "Build Docker image"
        required: false
        type: boolean
        default: false
      run-docker-push:
        description: "Push Docker image to GHCR"
        required: false
        type: boolean
        default: false
    secrets:
      SONAR_TOKEN:
        required: false
      SONAR_HOST_URL:
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node.js ${{ inputs.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: "npm"
          cache-dependency-path: "package-lock.json"
      - name: Install dependencies
        run: npm ci
      - name: Upload node_modules cache
        uses: actions/upload-artifact@v4
        with:
          name: node-modules-${{ github.run_id }}
          path: ${{ inputs.working-directory }}/node_modules/
          retention-days: 1

  unit-tests:
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node.js ${{ inputs.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
      - name: Download node_modules cache
        uses: actions/download-artifact@v4
        with:
          name: node-modules-${{ github.run_id }}
          path: ${{ inputs.working-directory }}/node_modules/
      - name: Run unit tests
        run: npm test
      - name: Upload Test and Coverage Reports
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            ${{ inputs.working-directory }}/coverage/
            ${{ inputs.working-directory }}/jest-junit.xml
          retention-days: 1

  sonarqube-analysis:
    runs-on: ubuntu-latest
    needs: unit-tests
    if: ${{ inputs.run-sonar == true }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download Test and Coverage Reports
        uses: actions/download-artifact@v4
        with:
          name: test-reports
          path: ${{ inputs.working-directory }}
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        with:
          projectBaseDir: ${{ inputs.working-directory }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  checkov-and-docker-build:
    runs-on: ubuntu-latest
    needs: unit-tests
    if: ${{ inputs.run-checkov == true || inputs.run-docker-build == true }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkov Scan
        if: ${{ inputs.run-checkov == true }}
        uses: bridgecrewio/checkov-action@master
        with:
          directory: ${{ inputs.working-directory }}

      - name: Build Docker image and export to disk
        if: ${{ inputs.run-docker-build == true }}
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.working-directory }}
          load: true
          tags: ghcr.io/${{ github.repository }}:${{ github.sha }}

  docker-push:
    runs-on: ubuntu-latest
    needs: checkov-and-docker-build
    if: ${{ inputs.run-docker-push == true }}
    permissions:
      packages: write
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker image
        run: docker push ghcr.io/${{ github.repository }}:${{ github.sha }}