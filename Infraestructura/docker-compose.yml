services:
  dind:
    image: docker:dind
    container_name: dind
    privileged: true
    volumes:
      - jenkins_docker_certs:/certs/client
      - docker_data:/var/lib/docker
    environment:
      DOCKER_TLS_CERTDIR: /certs
    networks:
      default:
        aliases:
          - docker
    restart: unless-stopped

  jenkins:
    build: .
    container_name: jenkins
    depends_on:
      - dind
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - jenkins_docker_certs:/certs/client:ro
      - ./jenkins-config:/var/jenkins_home/casc_configs
    environment:
      DOCKER_HOST: tcp://docker:2376
      DOCKER_CERT_PATH: /certs/client
      DOCKER_TLS_VERIFY: "1"
      JAVA_OPTS: -Djenkins.install.runSetupWizard=false
      #CASC_JENKINS_CONFIG: "/var/jenkins_home/casc_configs"
      SONAR_TOKEN: ${SONAR_TOKEN}
    user: root 
    restart: unless-stopped

  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    ports:
      - "9000:9000"
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    restart: unless-stopped

  db:
    image: postgres:15
    container_name: sonardb
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - postgresql:/var/lib/postgresql/data
    restart: unless-stopped

volumes:
  jenkins_home:
  jenkins_docker_certs:
  docker_data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
